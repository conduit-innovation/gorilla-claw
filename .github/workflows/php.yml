name: PHPUnit Tests

on:
  push:
    branches: [ "main", "dev-**" ]
  pull_request:
    branches: [ "main", "dev-**" ]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script coverage
  test-main:

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: composer run-script coverage
    
    - name: Commit coverage report
      run: |
        git config user.name "GitHub Actions"
        git config user.email ""
        git add docs/coverage -f
        git add cov.xml -f
        git commit -m "cov: update report" || echo "No changes to commit"
        git push

    - name: Make code coverage badge
      uses: timkrase/phpunit-coverage-badge@v1.2.1
      with:
        coverage_badge_path: output/coverage.svg
        report: cov.xml
        push_badge: false

    - name: Git push to image-data branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_dir: ./output
        publish_branch: image-data
        github_token: ${{ secrets.GITHUB_TOKEN }}
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
